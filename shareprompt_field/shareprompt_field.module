<?php

/**
 * Define custom extra fields for Node Title and More Link
 *
 * Implements hook_field_extra_fields().
 */
function shareprompt_field_field_extra_fields() {

  $extra['node']['leader_page']['display'] = array(
    'field_shareprompt' => array(
      'label'       => t('Shareprompt'),
      'description' => t('A social sharing prompt block'),
      'weight'      => 50, // default weight, can be changed on display form by site-builder.
    ),
  );

  // disable these fields by default in the display
  shareprompt_field_hide_new_extra_field('node', 'leader_page', 'field_shareprompt');

  return $extra;
}

/**
 * Make the extra fields available to the render array of the display
 *
 * Implements hook_node_view().
 */
function shareprompt_field_node_view($node, $view_mode, $langcode) {
  // Gather Extra fields
  $extra_fields = field_info_extra_fields('node', $node->type, 'display');

  // Node Title
  if(!empty($extra_fields['field_shareprompt']) && $extra_fields['field_shareprompt']['display'][$view_mode]['visible']) {

    // Only display on bizunited page
    if ($node->nid == 130776) {
      // Insert Shareprompt block
      $block = module_invoke('shareprompt', 'block_view', 'shareprompt');

      // create a renderable array
      $node->content['field_shareprompt'] = array(
        '#prefix' => '<div id="block-shareprompt-shareprompt">',
        '#markup' => $block['content']['#markup'],
        '#attached' => $block['content']['#attached'],
        '#suffix' => '</div>'
      );
    }
  }
}

/**
 * Utility function to hide any newly created extra_fields.
 *
 * @param $entity_type string
 *   Entity type on which the new extra field will reside.
 *
 * @param $bundle string
 *   Bundle on which the new extra field will reside.
 *
 * @param $field_name string
 *   Machine name of extra field.
 */
function shareprompt_field_hide_new_extra_field($entity_type, $bundle, $field_name) {
  $settings = field_bundle_settings($entity_type, $bundle);
  $settings_updated = FALSE;
  $entity_info = entity_get_info($entity_type, $bundle);
  $view_modes = array_keys($entity_info['view modes']);
  if (!in_array('default', $view_modes)) {
    $view_modes[] = 'default';
  }
  foreach ($view_modes as $view_mode) {
    if (!isset($settings['extra_fields']['display'][$field_name][$view_mode])) {
      $settings_updated = TRUE;
      $settings['extra_fields']['display'][$field_name][$view_mode] = array(
        'weight'  => 100,
        'visible' => FALSE,
      );
    }
  }
  if ($settings_updated) {
    field_bundle_settings($entity_type, $bundle, $settings);
  }
}